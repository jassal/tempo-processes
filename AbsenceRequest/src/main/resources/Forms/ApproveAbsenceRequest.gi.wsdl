<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions targetNamespace="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi"
  xmlns:ApproveAbsenceRequest="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi"  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:attachments="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi/attachments"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">

  <wsdl:types>
  
      <!-- attachments schema in a separate schema as unqualified elements
         to be able to map them at runtime between one form to another without
         any transformation. -->
      <xsd:schema targetNamespace="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi/attachments"
            xmlns:ApproveAbsenceRequest="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi" 
            xmlns:attachments="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi/attachments"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="unqualified">
            <xsd:complexType name="attachments">
                <xsd:sequence>
                    <xsd:element name="attachment" type="attachments:attachment" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="attachmentMetadata">
                <xsd:sequence>
                    <xsd:element name="mimeType" type="xsd:string"/>
                    <xsd:element name="fileName" type="xsd:string"/>
                    <xsd:element name="title" type="xsd:string"/>
                    <xsd:element name="description" type="xsd:string"/>
                    <xsd:element name="creationDate" type="xsd:dateTime"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="attachment">
                <xsd:sequence>
                    <xsd:element name="attachmentMetadata" type="attachments:attachmentMetadata"/>
                    <xsd:element name="payloadUrl" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType> 
      </xsd:schema>  
  
  
    <!-- declare the namespace prefix again just to make sure
    this particular fragment is valid stand-alone schema. -->
    <xsd:schema targetNamespace="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi"
            xmlns:ApproveAbsenceRequest="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi" 
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:attachments="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi/attachments"
            elementFormDefault="qualified">
      <xsd:import namespace="http://www.intalio.com/gi/Forms/ApproveAbsenceRequest.gi/attachments"/>
      <xsd:include schemaLocation="ApproveAbsenceRequest.gi/IntalioInternal/FormModel.xsd"/>
      <!-- the wsdl message elements -->
  <xsd:element name="initProcessRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskId" type="xsd:string"/>
        <xsd:element name="participantToken" type="xsd:string"/>        
        <xsd:element name="user" type="xsd:string"/>
        <xsd:element name="formUrl" type="xsd:string"/>
        <xsd:element name="taskOutput">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="ApproveAbsenceRequest:FormModel"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="initProcessResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="status" type="xsd:string"/>
        <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0"/>
        
        <xsd:element name="taskMetaData" minOccurs="0">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="nextTaskId" type="xsd:string"/>
              <xsd:element name="nextTaskURL" type="xsd:string"/>
              <xsd:element name="instanceId" type="xsd:string" minOccurs="0"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="createTaskRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskMetaData" type="ApproveAbsenceRequest:taskMetaDataType"/>
        <xsd:element name="participantToken" type="xsd:string"/>
        <xsd:element name="taskInput">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="ApproveAbsenceRequest:FormModel"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="response">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="isChainedAfter" type="xsd:boolean" minOccurs="0"/>
        <xsd:element name="taskMetaData" type="ApproveAbsenceRequest:taskMetaDataType"/>
        <xsd:element name="status" type="xsd:string"/>
        <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="accessControlType">
    <xsd:sequence>
      <xsd:element name="user" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="role" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
<xsd:complexType name="scheduledActionsDetails">
        <xsd:choice minOccurs="0" maxOccurs="1">
            <xsd:element name="until" type="xsd:dateTime" maxOccurs="1" minOccurs="0" />
                <xsd:element name="for" type="xsd:duration" maxOccurs="1" minOccurs="0" />
        </xsd:choice>
    </xsd:complexType>
  <xsd:complexType name="taskMetaDataType">
    <xsd:sequence>
      <xsd:element name="taskId" type="xsd:string"/>
      <xsd:element name="taskState" type="xsd:token"/>
      <xsd:element name="taskType" type="xsd:token"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="processId" type="xsd:string"/>
      <xsd:element name="instanceId" type="xsd:string" minOccurs="0"/>
      
  <!-- processName is a user-defined identifier for the process 
  it can be used in a custom task-list. -->
      <xsd:element name="business" minOccurs="0">
        <xsd:complexType>
           <xsd:sequence>
              <xsd:element name="processName" type="xsd:string" minOccurs="0"/>
              <xsd:element name="instanceId" type="xsd:string" minOccurs="0"/>
              <xsd:element name="stepName" type="xsd:string" minOccurs="0"/>
              <xsd:element name="customData" minOccurs="0">
                <xsd:complexType>
                   <xsd:sequence>
                     <xsd:any minOccurs="0" maxOccurs="unbounded"/>
                   </xsd:sequence>
                   <xsd:anyAttribute/>
                </xsd:complexType>
              </xsd:element>
           </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="creationDate" type="xsd:dateTime"/>
      <xsd:element name="userOwner" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
      <xsd:element name="roleOwner" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>

      <xsd:element name="claimAction" type="ApproveAbsenceRequest:accessControlType" maxOccurs="1" minOccurs="0"/>
      <xsd:element name="revokeAction" type="ApproveAbsenceRequest:accessControlType" maxOccurs="1" minOccurs="0"/>
      <xsd:element name="saveAction" type="ApproveAbsenceRequest:accessControlType" maxOccurs="1" minOccurs="0"/>
      <xsd:element name="completeAction" type="ApproveAbsenceRequest:accessControlType" maxOccurs="1" minOccurs="0"/>

      <xsd:element name="formUrl" type="xsd:anyURI"/>
      <xsd:element name="failureCode" type="xsd:string"/>
      <xsd:element name="failureReason" type="xsd:string"/>
      <xsd:element name="priority" type="xsd:int"/>
      <xsd:element name="scheduledActions">
            <xsd:complexType>
               <xsd:sequence>
                  <xsd:element name="expiration" type="ApproveAbsenceRequest:scheduledActionsDetails"/>
                  <xsd:element name="deferActivation" type="ApproveAbsenceRequest:scheduledActionsDetails"/>
               </xsd:sequence>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="attachments" type="attachments:attachments"/> 
      <xsd:element name="userProcessCompleteSOAPAction" type="xsd:string"/>
      <xsd:element name="isChainedBefore" type="xsd:boolean"/>
      <xsd:element name="previousTaskId" type="xsd:string"/>
      <xsd:element name="userProcessEndpoint" type="xsd:string"/>
      <xsd:element name="userProcessNamespaceURI" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:element name="notifyTaskCompletionRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="participantToken" type="xsd:string"/>        
        <xsd:element name="user" type="xsd:string"/>
        <xsd:element name="taskMetaData" type="ApproveAbsenceRequest:taskMetaDataType"/>
        <xsd:element name="taskOutput">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="ApproveAbsenceRequest:FormModel"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="status" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="notifyRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="metadata">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="description" type="xsd:string" minOccurs="0"/>
              <xsd:element name="creationDate" type="xsd:dateTime" minOccurs="0"/>
              <xsd:element name="processId" type="xsd:string" minOccurs="0"/>
              <xsd:element name="instanceId" type="xsd:string" minOccurs="0"/>
              <xsd:element name="userOwner" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
              <xsd:element name="roleOwner" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
              <xsd:element name="formUrl" type="xsd:anyURI"/>
              <xsd:element name="dismissAction" type="ApproveAbsenceRequest:accessControlType" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="priority" type="xsd:int" minOccurs="0"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="input">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="ApproveAbsenceRequest:FormModel"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="notifyResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="status" type="xsd:string" minOccurs="1" maxOccurs="1"/>
        <xsd:element name="errorCode" type="xsd:string" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="escalateRequest">
    <xsd:complexType>
        <xsd:sequence>
            <xsd:element name="taskId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="userOwner" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="roleOwner" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="escalateResponse">
    <xsd:complexType>
        <xsd:sequence>
            <xsd:element name="status" type="xsd:string" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

      <!-- end of the wsdl message elements -->
    </xsd:schema>
    
  </wsdl:types>

  <!-- Messages Create -->
  <wsdl:message name="createTaskRequest">
    <wsdl:part name="root" element="ApproveAbsenceRequest:createTaskRequest"/>
  </wsdl:message>
  <wsdl:message name="createTaskResponse">
    <wsdl:part name="root" element="ApproveAbsenceRequest:response"/>
  </wsdl:message>
  <!-- Messages Complete -->
  <wsdl:message name="notifyTaskCompletionRequest">
    <wsdl:part name="root" element="ApproveAbsenceRequest:notifyTaskCompletionRequest"/>
  </wsdl:message>
  <wsdl:message name="notifyTaskCompletionResponse">
    <wsdl:part name="root" element="ApproveAbsenceRequest:response"/>
  </wsdl:message>
  <!-- Messages Escalate-->
  <wsdl:message name="escalateRequest">
    <wsdl:part name="root" element="ApproveAbsenceRequest:escalateRequest"/>
  </wsdl:message>
  <wsdl:message name="escalateResponse">
    <wsdl:part name="root" element="ApproveAbsenceRequest:escalateResponse"/>
  </wsdl:message>
  <!-- Messages Init -->
  <wsdl:message name="initProcessRequest">
    <wsdl:part name="root" element="ApproveAbsenceRequest:initProcessRequest"/>
  </wsdl:message>
  <wsdl:message name="initProcessResponse">
    <wsdl:part name="root" element="ApproveAbsenceRequest:initProcessResponse"/>
  </wsdl:message>
  <!-- Messages -->
  <wsdl:message name="notifyRequest">
    <wsdl:part name="root" element="ApproveAbsenceRequest:notifyRequest"/>
  </wsdl:message>
  <wsdl:message name="notifyResponse">
    <wsdl:part name="root" element="ApproveAbsenceRequest:notifyResponse"/>
  </wsdl:message>

  <!-- Operations provided by the processes interacting with workflow.
  no port and binding for those as they are provided by the process. -->
  <wsdl:portType name="Process">
    <wsdl:operation name="initProcess">
      <wsdl:input message="ApproveAbsenceRequest:initProcessRequest" name="initProcessRequest"/>
      <wsdl:output message="ApproveAbsenceRequest:initProcessResponse" name="initProcessResponse"/>
    </wsdl:operation>
    <wsdl:operation name="notifyTaskCompletion">
      <wsdl:input message="ApproveAbsenceRequest:notifyTaskCompletionRequest" name="notifyTaskCompletionRequest"/>
      <wsdl:output message="ApproveAbsenceRequest:notifyTaskCompletionResponse" name="notifyTaskCompletionResponse"/>
    </wsdl:operation>
  </wsdl:portType>

  <!-- operation provided by the workflow -->
  <wsdl:portType name="Workflow">
    <wsdl:operation name="createTask">
      <wsdl:input message="ApproveAbsenceRequest:createTaskRequest" name="createTaskRequest"/>
      <wsdl:output message="ApproveAbsenceRequest:createTaskResponse" name="createTaskResponse"/>
    </wsdl:operation>
    <wsdl:operation name="escalate">
      <wsdl:input message="ApproveAbsenceRequest:escalateRequest" name="escalateRequest"/>
      <wsdl:output message="ApproveAbsenceRequest:escalateResponse" name="escalateResponse"/>
    </wsdl:operation>
    <wsdl:operation name="notify">
      <wsdl:input message="ApproveAbsenceRequest:notifyRequest" name="notifyRequest"/>
      <wsdl:output message="ApproveAbsenceRequest:notifyResponse" name="notifyResponse"/>
    </wsdl:operation>
  </wsdl:portType>

  <wsdl:binding name="WorkflowSoapBinding" type="ApproveAbsenceRequest:Workflow">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createTask">
      <soap:operation soapAction="createTask" style="document"/>
      <wsdl:input><soap:body use="literal"/></wsdl:input>
      <wsdl:output><soap:body use="literal"/></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="escalate">
      <soap:operation soapAction="escalate" style="document"/>
      <wsdl:input><soap:body use="literal"/></wsdl:input>
      <wsdl:output><soap:body use="literal"/></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="notify">
      <soap:operation soapAction="notify" style="document"/>
      <wsdl:input><soap:body use="literal"/></wsdl:input>
      <wsdl:output><soap:body use="literal"/></wsdl:output>
    </wsdl:operation>
  </wsdl:binding>

  <wsdl:service name="WorkflowSoapService">
    <wsdl:port name="ApproveAbsenceRequestPort" binding="ApproveAbsenceRequest:WorkflowSoapBinding">
      <soap:address location="http://localhost:8080/fds/workflow/ApproveAbsenceRequest"/>
    </wsdl:port>
  </wsdl:service>

</wsdl:definitions>